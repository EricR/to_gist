{
  if hash curl 2>/dev/null && hash jq 2>/dev/null; then
    if [ ! -z "$GITHUB_TOKEN" ]; then
      # Read STDIN and escape quotes
      to_gist_stdin=`cat`
      to_gist_stdin="${to_gist_stdin//\"/\\\"}"

      # Filename is unique by hostname and UNIX timestamp
      to_gist_filename="$(hostname).$(date +%s).stdout"

      # Content is JSON-safe STDIN
      to_gist_content=`echo "{\"content\": \"${to_gist_stdin%x}\"}" | jq -c '.'`

      # Tokenize Bash history and extract last commands executed
      IFS=' ' read -ra to_gist_description <<< $(history | tail -n 1)
      to_gist_description="${to_gist_description[@]:1}"
      to_gist_description="${to_gist_description% |*}"
      to_gist_description="${to_gist_description//\"/\\\"}"

      # Make HTTP request to gist API, parse request, and extract the HTML URL
      to_gist_url=$(curl --silent -H "Authorization: bearer $GITHUB_TOKEN" \
        -H "Accept: application/json" -H "Content-type: application/json" \
        -X POST https://api.github.com/gists -d "
      {
        \"description\": \"$to_gist_description\",
        \"public\": false,
        \"files\": {
          \"$to_gist_filename\": $to_gist_content
        }
      }" | jq -r '.html_url')

      # Send HTML URL to system clipboard
      if hash pbcopy 2>/dev/null; then
        echo $to_gist_url | pbcopy
      elif hash xclip 2>/dev/null; then
        echo $to_gist_url | xclip
      else
        echo $to_gist_url
      fi
      echo "Your gist has been created and has been copied to your clipboard."
      echo "It's available at ${to_gist_url}."
    else
      echo "to_gist: Missing GITHUB_TOKEN."
      echo "See https://help.github.com/articles/creating-an-access-token-for-command-line-use/"
    fi
  else
    echo "to_gist: Missing one of the following dependencies:"
    echo "* curl"
    echo "* jq"
    echo ""
    echo "Please make sure all bins are included in your PATH and try again."
  fi
}
